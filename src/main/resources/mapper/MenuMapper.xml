<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vegetable.mapper.MenuMapper">
  <resultMap id="BaseResultMap" type="com.vegetable.entity.MenuEntity">
    <!--@mbg.generated generated on Fri Jan 31 14:27:02 CST 2020.-->
    <!--@Table menu-->
    <id column="m_id" jdbcType="INTEGER" property="mId" />
    <result column="m_name" jdbcType="VARCHAR" property="mName" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="step_id" jdbcType="INTEGER" property="stepId" />
    <result column="food_material" jdbcType="VARCHAR" property="foodMaterial" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated generated on Fri Jan 31 14:27:02 CST 2020.-->
    m_id, m_name, user_id, step_id, food_material, `level`, `time`, image, create_time,like_num,status
  </sql>

  <!--菜谱查询-->
  <select id="selectMenu" resultType="com.vegetable.entity.MenuEntity">
    SELECT A.*,B.discussNum
    FROM
    (
    SELECT m.*,COUNT( c.menu_id ) collectionNum,u.user_name userName
    FROM menu m
    LEFT JOIN users u on u.user_id = m.user_id
    LEFT JOIN collection c ON m.m_id = c.menu_id
    GROUP BY m.m_id
    ) A
    LEFT JOIN (
    SELECT m.m_id,COUNT( d.menu_id ) discussNum
    FROM menu m
    LEFT JOIN discuss d ON m.m_id = d.menu_id
    GROUP BY m.m_id
    ) B ON A.m_id = B.m_id
    <where>
        <if test="mName != null and mName != ''">
          m_name like concat('%',#{mName,jdbcType=VARCHAR},'%')
        </if>
        <if test="status != null">
          and status = #{status,jdbcType=INTEGER}
        </if>
        <if test="userId != null">
          and user_id = #{userId,jdbcType=INTEGER}
        </if>
    </where>
  </select>

  <!--菜谱步骤添加-->
  <insert id="insertSteps" parameterType="com.vegetable.entity.StepsEntity" useGeneratedKeys="true" keyColumn="step_id" keyProperty="stepId">
        insert into steps(m_id,step1,step2,step3,step4,step5,step6,step7,step8,step9,step10,step11,step12)
        value (#{mId},#{step1,jdbcType=VARCHAR},#{step2},#{step3},#{step4},#{step5},#{step6},#{step7},#{step8},#{step9},#{step10},#{step11},#{step12})
  </insert>

  <!--步骤修改-->
  <update id="updateSteps" parameterType="com.vegetable.entity.StepsEntity">
    update steps
    <set>
      <if test="mId != null">
        m_id = #{mId,jdbcType=INTEGER},
      </if>
    </set>
    where step_id = #{stepId,jdbcType=INTEGER}
  </update>

  <!--通过菜谱 id 查询步骤-->
  <select id="selectStepsByMId" resultType="com.vegetable.entity.StepsEntity">
    select step_id,m_id,step1,step2,step3,step4,step5,step6,step7,step8,step9,step10,step11,step12
    from steps
    where m_id = #{mId,jdbcType=INTEGER}
  </select>

  <!--添加收藏信息-->
  <insert id="insertCollection" parameterType="com.vegetable.entity.CollectionEntity">
    insert into collection(user_id, menu_id, create_time)
    value (#{userId,jdbcType=INTEGER},#{menuId,jdbcType=INTEGER},#{createTime})
  </insert>

  <!--通过用户 id 和 菜谱 id 查询用户是否收藏过该菜谱-->
  <select id="selectCollection" resultType="com.vegetable.entity.CollectionEntity">
    select collection_id, user_id, menu_id, create_time
    from collection
    where user_id = #{param1,jdbcType=INTEGER} and menu_id = #{param2,jdbcType=INTEGER}
    limit 1
  </select>

  <!--点赞、收藏、评论数量加一-->
  <update id="updateMenuNum" parameterType="integer">
    update menu
    <trim prefix="set" suffixOverrides=",">
    <if test="param2 == 1">
      collection_num = collection_num + 1,
    </if>
    <if test="param2 == 2">
      like_num = like_num + 1,
    </if>
    <if test="param2 == 3">
      discuss_num = discuss_num + 1,
    </if>
    </trim>
    where m_id = #{param1,jdbcType=INTEGER}
  </update>

  <!--根据菜谱 id 查询评论-->
  <select id="selectDiscuss" resultType="com.vegetable.entity.DiscussEntity">
    select discuss_id,d.user_id,user_name,user_head,menu_id,content,discuss_time
    from discuss d
    left join users u on d.user_id = u.user_id
    where menu_id = #{menuId,jdbcType=INTEGER}
    order by discuss_time desc
  </select>

  <!--添加评论-->
  <insert id="insertDiscuss" parameterType="com.vegetable.entity.DiscussEntity">
    insert into discuss (user_id, menu_id, content, discuss_time)
    value (#{userId,jdbcType=INTEGER},#{menuId,jdbcType=INTEGER},#{content,jdbcType=VARCHAR},#{discussTime,jdbcType=TIMESTAMP})
  </insert>

  <!--查询点赞前 3 菜谱-->
  <select id="selectLikenum" resultType="com.vegetable.entity.MenuEntity">
    SELECT A.*,B.discussNum
    FROM
    (
    SELECT m.*,COUNT( c.menu_id ) collectionNum,u.user_name userName
    FROM menu m
    LEFT JOIN users u on u.user_id = m.user_id
    LEFT JOIN collection c ON m.m_id = c.menu_id
    GROUP BY m.m_id
    ) A
    LEFT JOIN (
    SELECT m.m_id,COUNT( d.menu_id ) discussNum
    FROM menu m
    LEFT JOIN discuss d ON m.m_id = d.menu_id
    GROUP BY m.m_id
    ) B ON A.m_id = B.m_id
    order by A.like_num desc
    limit 3
  </select>

  <!--查询用户收藏的菜谱-->
  <select id="selectCollectionByUserId" resultType="com.vegetable.entity.MenuEntity">
    SELECT A.*,B.discussNum
    FROM
    (
    SELECT m.*,COUNT( c.menu_id ) collectionNum,c.collection_id collectionId,u.user_name userName
    FROM menu m
    LEFT JOIN users u on u.user_id = m.user_id
    LEFT JOIN collection c ON m.m_id = c.menu_id
    <where>
      <if test="_parameter != null and _parameter != ''">
        c.user_id = #{userId,jdbcType=INTEGER}
      </if>
    </where>
    GROUP BY m.m_id
    ) A
    LEFT JOIN (
    SELECT m.m_id,COUNT( d.menu_id ) discussNum
    FROM menu m
    LEFT JOIN discuss d ON m.m_id = d.menu_id
    GROUP BY m.m_id
    ) B ON A.m_id = B.m_id
  </select>

  <!--删除收藏菜谱-->
  <delete id="deleteCollection" parameterType="integer">
    delete from collection where collection_id = #{collectionId,jdbcType=INTEGER}
  </delete>

</mapper>